datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  userName      String
  email         String         @unique
  password      String
  emailVerified DateTime?      @map("email_verified")
  image         String?   
  friends       Friends[]
  Sender          Conversations[] @relation("sender")
  Receiver        Conversations[] @relation("receiver")
  SenderMessage   Message[]       @relation("senderMessage")
  ReceiverMessage Message[]       @relation("receiverMessage")

  @@map("users")
}

type Friends {

  userId   String
  friendId String
  
}

model Conversations {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  senderId   String    @db.ObjectId
  receiverId String    @db.ObjectId
  sender    User      @relation(fields: [senderId], references: [id], name: "sender")
  receiver   User      @relation(fields: [receiverId], references: [id], name: "receiver")
  Message    Message[]
  
    @@map("conversations")
}

model Message {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId 
  conversationId String        @db.ObjectId
  conversation   Conversations @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  sender         User          @relation(fields: [senderId], references: [id], onDelete: Cascade, name: "senderMessage")
  receiver    User          @relation(fields: [receiverId], references: [id], onDelete: Cascade, name: "receiverMessage")
  time           DateTime      @default(now())
  text           String
  senderId       String        @db.ObjectId
  receiverId   String        @db.ObjectId

    @@map("messages")
}

